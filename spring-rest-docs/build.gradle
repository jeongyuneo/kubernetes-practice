plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'    // (1) asciidoctor 플러그인 적용
}

group = 'com.jeongyun'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {   // (2) 생성된 스니펫의 출력 위치를 정의하도록 속성 구성
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'   // (3) MockMvc 의존성 추가
}

test {  // (4) 스니펫 디렉토리를 출력으로 추가하도록 test 작업 구성
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir  // (5) 스니펫 디렉토리를 입력으로 구성
    dependsOn test  // (6) 문서가 생성되기 전에 테스트가 실행되도록 작업이 test 작업에 의존하도록 함
}

bootJar {
    dependsOn asciidoctor   // (6) 문서가 생성되기 전에 테스트가 실행되도록 작업이 test 작업에 의존하도록 함
    from("${asciidoctor.outputDir}/html5") {    // (8) jar 안에 build/docs/asciidoc 하위에 생기는 html 파일을 static/docs로 복사
        into 'static/docs'
    }
}

task copyDocument(type: Copy) { // (9) build/docs/asciidoc 하위에 생기는 html 파일을 static/docs로 복사
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument  // (10) build 작업이 문서를 복사하는 copyDocument 작업에 의존하도록 함
}
